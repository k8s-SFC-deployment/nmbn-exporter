apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nmbn-exporter.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "nmbn-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "nmbn-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nmbn-exporter.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["./nmbn-exporter"]
        args: ["--config.path=/config/config.yaml"]
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: {{ include "nmbn-exporter.fullname" . }}-config
          mountPath: "/config"
          readOnly: true
      volumes:
      - name: {{ include "nmbn-exporter.fullname" . }}-config
        configMap:
          name: {{ include "nmbn-exporter.fullname" . }}-config
